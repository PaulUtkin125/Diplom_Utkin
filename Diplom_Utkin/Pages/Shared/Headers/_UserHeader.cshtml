<header>
    <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light border-bottom box-shadow mb-3">
        <div class="container">
            <div class="hd-imgBlock">
                <a asp-page="/userPage/Index">
					<img src="/Image/mainIcon2.png" alt="Alternate Text" />
                </a>
                
            </div>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                    aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                <ul class="navbar-nav flex-grow-1 hd-nav">
                    <li class="nav-item myItem">
                        <a class="nav-link" asp-page="/userPage/Index">Портфель</a>
                    </li>
                    <li class="nav-item myItem">
                        <a class="nav-link" asp-page="/userPage/Vitrina">Витрина</a>
                    </li>
                </ul>
                <ul class="navbar-nav">
                    <li class="nav-item dropdown">
						<a class="nav-link dropdown-toggle" data-bs-toggle="dropdown" href="#" role="button" aria-expanded="false"><label id="koshelBox_btn">@Model.Money</label> ₽</a>
                        <ul class="dropdown-menu">
                            <li><a class="dropdown-item" onclick="openVvod()">Пополнить</a></li>
                            <li><a class="dropdown-item" onclick="openVuvod()">Вывести</a></li>
                        </ul>
                    </li>
					<li class="nav-item myItem">
                        <a class="nav-link" onclick="profilOpen()">
                            <div class="hd-imgBlock settings">
                                <img src="/Image/Profil.png" alt="Alternate Text" />
                            </div>
                        </a>
                    </li>
                    <li class="nav-item myItem">
                       
                        <a class="nav-link" href="#" onclick="vuhodOnStart(event)">Выйти</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
</header>


<script>
	function openVuvod(){
		document.getElementById("buyForm").style.display = 'none';

		document.getElementById('myForm').style.display = 'block';
		document.getElementById('popTitle').textContent = 'Вывод';
		document.getElementById('popOperationType').value = '1';
		document.getElementById('popOperationType').textContent = '1';
		openPopup();
	}
	function openVvod(){
		document.getElementById("buyForm").style.display = 'none';

		document.getElementById('myForm').style.display = 'block';
		document.getElementById('popTitle').textContent = 'Пополнить';
		document.getElementById('popOperationType').value = '0';
		document.getElementById('popOperationType').textContent = '0';
		openPopup();
	}

	function moneuBtn() {
		var mySym = Number(document.getElementById('koshelBox_btn').textContent.replace(" ₽", ""));
		var sum = Number(document.getElementById('summText').value);
		var vector = Number(document.getElementById('popOperationType').textContent);
		var isValid = true;

		console.log("mySym:", mySym);
		console.log("sum:", sum);
		console.log("vector:", vector);


		if (sum < 1) {
			document.getElementById('summTextError').textContent = 'Сумма должна быть больше нуля!';
			return false;
		} else {
			if (vector == 1) {
				// вывод средств
				if (sum > mySym) {
					console.log("sum > mySym  :", sum > mySym);
					document.getElementById('summTextError').textContent = 'Недостаточно средств!';
					return false;
				}
			}

		}

		return isValid;
	}


	function buyOpenMain(id){
		openPopup();
		document.getElementById('myForm').style.display = 'none';


		document.getElementById('targetId').textContent = id;
		document.getElementById("buyForm").style.display = 'block';
	}

	async function buyOpen(id){
		window.scrollTo({
			top:0,
			behavior:'smooth'
		});

		var userMoney = Number(document.getElementById('koshelBox_btn').textContent.replace( ',', '.'));

		console.log(userMoney);

		document.getElementById("sellBtn").style.display = 'none';
		document.getElementById('buyBtn').style.display = 'block';

		document.getElementById('popTitleBuy').textContent = 'Купить';
		document.getElementById('edIzm').textContent = 'Сумма';

		const data = await BuyData(id);
		document.getElementById('toolName').textContent = data.nameInvestTool;
		document.getElementById('targetToolImg').setAttribute('src', 'data:image/png;base64,' + data.imageSource);
		document.getElementById('peiceTool').value = data.price;

		document.getElementById('dostupSredstv').textContent = 'Доступно ' + String(userMoney) + ' ₽';
		buyOpenMain(id);
	}

	async function sellOpen(id, quentity){
		window.scrollTo({
			top:0,
			behavior:'smooth'
		});

		document.getElementById("buyBtn").style.display = 'none';
		document.getElementById('sellBtn').style.display = 'block';

		document.getElementById('popTitleBuy').textContent = 'Продать';
		document.getElementById('edIzm').textContent = 'Количество';

		document.getElementById('dostupSredstv').textContent = 'Доступно ' + quentity + ' шт.';

		const data = await BuyData(id);
		document.getElementById('toolName').textContent = data.nameInvestTool;
		document.getElementById('targetToolImg').setAttribute('src', 'data:image/png;base64,' + data.imageSource);
		document.getElementById('peiceTool').value = data.price;

		buyOpenMain(id)
	}

	async function BuyData(id_){
		const baseUrl = '@Model.apiSettings.BaseUrl';
		const response = await fetch(baseUrl + 'Universal/targetToolInformation', {
			method: 'POST',
			headers:{
				'Content-Type':'application/json'
			},
			body: JSON.stringify({ id: id_ })
		});
		if(!response.ok){
			throw new Error('Network response was not ok');
		}
		const data = await response.json();

		return data;

	}

	function BuyFormValidation(){
		const toolPrice = document.getElementById('peiceTool');
		var toolPrice_value = toolPrice.value;

		var toolId = document.getElementById('targetId').textContent;

		const summOperationBox = document.getElementById('summOperation');
		var summOperation_value = summOperationBox.value;
		
		var uId = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.uId));

		if(document.getElementById('sellBtn').style.display == 'none'){

			toolId = Number(toolId);
			toolPrice_value = Number(toolPrice_value.replace(',', '.'));
			factQuentity = Number(String(factQuentity).replace(',', '.'));

			console.log('summOperation_value: ', summOperation_value);
			if(summOperation_value < 1)
			{
				summOperationBox.style.borderBottom = '2px solid red';
				return false;
			}
			else summOperationBox.style.borderBottom = '0px';

			console.log('toolPrice_value: ', toolPrice_value);
			if(summOperation_value < toolPrice_value.replace )
			{
				summOperationBox.style.borderBottom = '2px solid red';
				return false;
			}
			else summOperationBox.style.borderBottom = '0px';

			var factQuentity = Math.floor(summOperation_value/toolPrice_value);
			console.log('factQuentity1: ', factQuentity);

			

			console.log('uId: ', uId);
			console.log('toolId: ', toolId);
			console.log('factQuentity: ', factQuentity);
			console.log('toolPrice_value: ', toolPrice_value);

			const data = BuyMethodAPI(uId, toolId, factQuentity, toolPrice_value );


		}
		else
		{
			console.log(1);

			if(summOperation_value < 1)
			{
				summOperationBox.style.borderBottom = '2px solid red';
				return false;
			}
			else summOperationBox.style.borderBottom = '0px';

			if(String(summOperation_value).includes('.')|| String(summOperation_value).includes(','))
			{
				summOperationBox.style.borderBottom = '2px solid red';
				return false;
			}
			else summOperationBox.style.borderBottom = '0px';

			var factQuentity = summOperation_value;

			toolId = Number(toolId);
			toolPrice_value = Number(toolPrice_value.replace(',', '.'));
			factQuentity = Number(factQuentity);

			const data = BuyMethodAPI(uId, toolId,  factQuentity, -toolPrice_value);
		}

		return true;
	}

	async function BuyMethodAPI(userId, ToolId, quentity, price){
		const baseUrl = '@Model.apiSettings.BaseUrl';
		const response = await fetch(baseUrl + 'User/BueMethod', {
			method: 'POST',
			headers:{
				'Content-Type':'application/json'
			},
			body: JSON.stringify({ uId: userId, toolId:ToolId, Quentity: quentity, Price: price})
		});
		if(!response.ok){
			throw new Error('Network response was not ok');
		}
		const data = response.json();

		return data;
	}


	var startLogin1 = '';
	var startPhone1 = '';

	function updateLogin(){
		document.getElementById('portfile_mail').disabled = false;
		document.getElementById('portfile_save_btn').style.display = 'block';
	}
	function updatePhone(){
		document.getElementById('portfile_phone').disabled = false;
		document.getElementById('portfile_save_btn').style.display = 'block';
	}

	function Update_Method_Profile(){
		const id_ = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model._user.Id));
		const mail_ = document.getElementById('portfile_mail').value;
		const phone_ = document.getElementById('portfile_phone').value;

		const idRole_ = 2;

		updateUser(id_, mail_, idRole_, phone_);
	}

	async function loadAllUserType() {
		const baseUrl = '@Model.apiSettings.BaseUrl';
		const response = await fetch(baseUrl + 'Admin/AllUserType', {
			method: 'GET',
			headers: {
				'Content-Type': 'application/json'
			}
		});
		if (!response.ok) {
			throw new Error('Network response was not ok');
		}
		var UserTypeList = response.json();
		return UserTypeList;
	}

	async function updateUser(id_, mail_, idRole_, phone_) {
		const baseUrl = '@Model.apiSettings.BaseUrl';
		const response = await fetch(baseUrl + 'Admin/updateUser', {
			method: 'PATCH',
			headers: {
				'Content-Type': 'application/json'
			},
			body: JSON.stringify({ id: id_, Loggin: mail_, Phone: phone_, TypeOfUserId: idRole_ })
		});
		if (!response.ok) {
			throw new Error('Network response was not ok');
		}
		const data = response.json();
		console.log('User updated successfully:', data);
	}

	window.onpopstate = function(event)
	{
		vuhodOnStart(event);
	}
</script>