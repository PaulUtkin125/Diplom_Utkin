@page
@inject IHttpContextAccessor HttpContextAccessor
@model Diplom_Utkin.Pages.LoginForm_.LoginFormModel
@{
	ViewData["Title"] = "Авторизация";
}

@* @await Html.PartialAsync("Headers/_HomeHeader") *@

<div class="window-box vhodBox">
	<div class="contentVhod">
		<div class="form-block">
			<form method="post">
				<h1>Авторизация</h1>
				<div class="form-group">
					<label asp-for="User.Login" class="control-label">E-mail</label>
					<input asp-for="User.Login" class="form-control" type="email"/>
					<span asp-validation-for="User.Login" class="text-danger"></span>
				</div>

				<div class="form-group">
					<label asp-for="User.Password" class="control-label">Пароль</label>
					<input asp-for="User.Password" class="form-control" type="password"/>
					<span asp-validation-for="User.Password" class="text-danger"></span>
				</div>
				<div class="form-group">
					<button class="myButton" name="action" type="submit" value="vhod_btn">Войти</button>
				</div>
			</form>
			<form method="post">
				<div class="form-group">
					<button class="myButton" name="action" type="submit" onclick="tr()" value="Registr_btn">У Вас нет аккаунта? Зарегистрируйтесь</button>
				</div>
				
			</form>

		</div>
	</div>
</div>

<script>
	

	function tr(){
		const token = @Model.jwtToken

		fetch('http://localhost:5092/userPage/Index', {
		method: 'GET',
		headers: {

			'Authorization': 'Bearer' + token, //Ваш токен
			'Content-Type': 'application/json'
		}
	})
	.then(response => {
		if (response.ok) {
			return response.json();
		}
		throw new Error('Network response was not ok.');
	})
	.then(data => {
		console.log(data);
	})
	.catch(error => {
		console.error('There was a problem with the fetch operation:', error);
	});
	}
		
</script>

@section Scripts {
	@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}