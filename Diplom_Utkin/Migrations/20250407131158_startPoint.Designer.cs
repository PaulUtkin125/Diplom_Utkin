// <auto-generated />
using System;
using Finansu.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Diplom_Utkin.Migrations
{
    [DbContext(typeof(dbContact))]
    [Migration("20250407131158_startPoint")]
    partial class startPoint
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Finansu.Model.Brokers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsClosing")
                        .HasColumnType("bit");

                    b.Property<string>("NameBroker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourseFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UrisidikciiyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UrisidikciiyId");

                    b.ToTable("Brokers");
                });

            modelBuilder.Entity("Finansu.Model.DvizhenieSredstv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvestToolsId")
                        .HasColumnType("int");

                    b.Property<double>("Money")
                        .HasColumnType("float");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvestToolsId");

                    b.HasIndex("UserId");

                    b.ToTable("dvizhenieSredstvs");
                });

            modelBuilder.Entity("Finansu.Model.InvestToolHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("AllManey")
                        .HasColumnType("float");

                    b.Property<DateTime>("DataIzmrneniiy")
                        .HasColumnType("datetime2");

                    b.Property<int>("InvestToolsId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InvestToolsId");

                    b.HasIndex("UserId");

                    b.ToTable("InvestToolHistory");
                });

            modelBuilder.Entity("Finansu.Model.InvestTools", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrokersId")
                        .HasColumnType("int");

                    b.Property<string>("NameInvestTool")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("isClosed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BrokersId");

                    b.ToTable("InvestTools");
                });

            modelBuilder.Entity("Finansu.Model.Portfolio", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("InvestToolId")
                        .HasColumnType("int");

                    b.Property<double>("AllManey")
                        .HasColumnType("float");

                    b.HasKey("UserId", "InvestToolId");

                    b.HasIndex("InvestToolId");

                    b.ToTable("Portfolio");
                });

            modelBuilder.Entity("Finansu.Model.TypeOfUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("typeOfUser");
                });

            modelBuilder.Entity("Finansu.Model.Urisidikciiy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsClosing")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Urisidikciiy");
                });

            modelBuilder.Entity("Finansu.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Loggin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Maney")
                        .HasColumnType("float");

                    b.Property<string>("PaswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeOfUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeOfUserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Finansu.Model.Brokers", b =>
                {
                    b.HasOne("Finansu.Model.Urisidikciiy", "Urisidikciiy")
                        .WithMany()
                        .HasForeignKey("UrisidikciiyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Urisidikciiy");
                });

            modelBuilder.Entity("Finansu.Model.DvizhenieSredstv", b =>
                {
                    b.HasOne("Finansu.Model.InvestTools", "InvestTools")
                        .WithMany()
                        .HasForeignKey("InvestToolsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Finansu.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvestTools");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Finansu.Model.InvestToolHistory", b =>
                {
                    b.HasOne("Finansu.Model.InvestTools", "InvestTools")
                        .WithMany()
                        .HasForeignKey("InvestToolsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Finansu.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("InvestTools");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Finansu.Model.InvestTools", b =>
                {
                    b.HasOne("Finansu.Model.Brokers", "Brokers")
                        .WithMany()
                        .HasForeignKey("BrokersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brokers");
                });

            modelBuilder.Entity("Finansu.Model.Portfolio", b =>
                {
                    b.HasOne("Finansu.Model.InvestTools", "InvestTool")
                        .WithMany()
                        .HasForeignKey("InvestToolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Finansu.Model.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InvestTool");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Finansu.Model.User", b =>
                {
                    b.HasOne("Finansu.Model.TypeOfUser", "TypeOfUser")
                        .WithMany()
                        .HasForeignKey("TypeOfUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TypeOfUser");
                });
#pragma warning restore 612, 618
        }
    }
}
